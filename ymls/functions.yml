process-message:
  handler: index.sendMessage
  memorySize: 256
  warmup: true
  iamRoleStatementsName: ${self:service}-${self:provider.stage}-process-message-role
  iamRoleStatements:
    - Effect: Allow
      Action:
        - lambda:InvokeAsync
        - lambda:InvokeFunction
      Resource: '*'
    - Effect: Allow
      Action:
      - logs:CreateLogGroup
      Resource: "*"
    - Effect: Allow
      Action:
      - logs:CreateLogStream
      Resource: "*"
    - Effect: Allow
      Action:
      - logs:PutLogEvents
      Resource: "*"
    - Effect: Allow
      Action:
      - “sqs:SendMessage”
      - “sqs:GetQueueUrl”
      - "sqs:ListQueues"
      Resource: "*"
  events:
    - http:
        path: events/send
        integration: lambda-proxy
        method: post
        cors:
          origin: '*'

post:
  handler: index.handler 
  memorySize: 128
  timeout: 30
  iamRoleStatementsName: ${self:service}-${self:provider.stage}-message-role
  events:
    - http:
        path: message
        method: post
